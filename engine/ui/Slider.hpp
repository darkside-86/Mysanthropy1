// Slider.hpp
//-----------------------------------------------------------------------------
// Author: darkside-86
// (c) 2019
//-----------------------------------------------------------------------------
// This program is free software : you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.If not, see < https://www.gnu.org/licenses/>.
//-----------------------------------------------------------------------------
#pragma once

#include "Frame.hpp"

namespace engine { namespace ui {

    // Defines a slider, a mouse-movable knob along a vertical or horizontal line, that generates a value
    // between 0 and 1.
    class Slider : public Frame
    {
    public:
        // Whether the slider line is horizontal or vertical
        enum ORIENTATION { HORIZONTAL, VERTICAL };
        // Constructor
        Slider(Object* parent, int width, int height, ORIENTATION orientation, ogl::Texture* texture);
        // Destructor
        virtual ~Slider();
        // returns the orientation of the slider
        inline ORIENTATION GetOrientation() const { return orientation_; }
        // Sets the color of the line
        void SetSlideColor(const Color& c);
        // Returns the color of the line
        Color GetSlideColor();
        // Sets the color of the draggable knob
        void SetKnobColor(const Color& c);
        // Gets the color of the knob
        Color GetKnobColor();
        // Sets the position of the knob and thus the value generated
        void SetValue(double value);
        // Return the value generated by the position of the knob between the ends of the slide
        double GetValue();
    private:
        // Determines the orientation of the slide
        ORIENTATION orientation_;
        // The renderable slide line. Is a child object of the Slider
        Frame* slide_;
        // The renderable square knob. Is a child object of the Slider
        Frame* knob_;
    };

}}